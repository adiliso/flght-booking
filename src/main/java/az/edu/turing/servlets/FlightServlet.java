package az.edu.turing.servlets;import az.edu.turing.controller.FlightController;import az.edu.turing.model.dto.request.FlightCreateRequest;import az.edu.turing.model.dto.response.BookingResponse;import az.edu.turing.model.dto.response.FlightResponse;import com.fasterxml.jackson.databind.ObjectMapper;import com.fasterxml.jackson.datatype.jsr310.JavaTimeModule;import javax.servlet.ServletException;import javax.servlet.ServletOutputStream;import javax.servlet.http.HttpServlet;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import java.io.IOException;import java.io.OutputStream;import java.util.HashMap;import java.util.Map;import java.util.Set;public class FlightServlet extends HttpServlet {    private final FlightController controller;    private final ObjectMapper objectMapper;    public FlightServlet(FlightController controller) {        this.controller = controller;        this.objectMapper = new ObjectMapper().registerModule(new JavaTimeModule());    }    @Override    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {//        int id = Integer.parseInt(req.getParameter("id"));        resp.setContentType("application/json");        resp.setCharacterEncoding("UTF-8");        Set<FlightResponse> responses = controller.findAllInNext24Hours();        OutputStream outputStream = resp.getOutputStream();        outputStream.write(objectMapper.writeValueAsBytes(responses));    }    @Override    protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException {        if (!"application/json".equalsIgnoreCase(req.getContentType())) {            resp.setStatus(HttpServletResponse.SC_BAD_REQUEST);            resp.getWriter().write("Invalid Content-Type, expected application/json");            return;        }        try {            Map jsonBody = objectMapper.readValue(req.getInputStream(), Map.class);            controller.create(new FlightCreateRequest(                    (Integer) jsonBody.get("year"),                    (Integer) jsonBody.get("month"),                    (Integer) jsonBody.get("day"),                    (Integer) jsonBody.get("hh"),                    (Integer) jsonBody.get("mm"),                    (String) jsonBody.get("d_point"),                    (Integer) jsonBody.get("total_seats")                    ));            resp.setContentType("application/json");            resp.setStatus(HttpServletResponse.SC_OK);            resp.getWriter().write(objectMapper.writeValueAsString(("Data received successfully")));        } catch (Exception e) {            resp.setStatus(HttpServletResponse.SC_BAD_REQUEST);            resp.getWriter().write("Invalid JSON format");            e.printStackTrace();        }    }}